<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2020 by Dr. Jody Paul
     This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.
     http://creativecommons.org/licenses/by-sa/4.0/ -->
<project name="HelloWorld" basedir="." default="main">
  <description>
    Build file for student explorations and discovery learning
  </description>
  <property name="version" value="20200930_0"/>
  <property name="author" value="Dr. Jody Paul"/>
  <property name="copyright" value="Copyright (c) 2020 by Dr. Jody Paul"/>
  <property name="license"
            value="This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License."/>

  <!-- Global properties -->
  <property name="src.dir"     value="src"/>
  <property name="build.dir"   value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jar.dir"     value="${build.dir}/jar"/>
  <property name="lib.dir"     value="lib"/>
  <property name="reports.dir" location="reports"/>

  <!-- Identify main class -->
  <property name="main-class"  value="metrocs.HelloWorld"/>

  <!-- Establish classpaths for production and testing. -->
  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
  <path id="test.classpath">
    <pathelement path="${classes.dir}"/>
    <fileset dir="${ant.home}/lib" includes="*.jar"/>
    <fileset dir="${lib.dir}" includes="*.jar"/>
  </path>


  <target name="all"
          description="Clean, Build, Check, Test, and Run"
          depends="clean, compile, checkstyle, test, run"/>

  <target name="clean"
          description="Clean up dynamically-created files and directories">
    <delete dir="${build.dir}"/>
    <delete dir="${reports.dir}"/>
  </target>

  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}"
           destdir="${classes.dir}"
           classpathref="test.classpath"
           encoding="UTF-8"
           debug="on"
           includeantruntime="false">
      <compilerarg value="-Xlint"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" description="Run the application" depends="jar">
    <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
  </target>

  <target name="main"
          description="Clean, Build, and Run"
          depends="clean,run"/>

  <target name="init">
    <!-- Create a time stamp -->
    <tstamp/>
  </target>

  <!-- Checkstyle properties -->
  <property name="checkstyle.jar" value="${lib.dir}/checkstyle.jar"/>
  <property name="checkstyle.xsl" value="${lib.dir}/checkstyle.xsl"/>
  <property name="checks.xml" value="${lib.dir}/jp_checks.xml"/>
  <property name="checkstyle.reports.dir" value="${reports.dir}/checkstyle"/>

  <target name="checkstyle"
          description="Generate Checkstyle report of code convention violateions">
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpath="${checkstyle.jar}" />
    <mkdir dir="${checkstyle.reports.dir}"/>
    <checkstyle config="${checks.xml}"
                failureProperty="checkstyle.failure"
                failOnViolation="false">
      <fileset dir="${src.dir}" includes="**/*.java" />
      <!-- formatter type="plain" / -->
      <formatter type="xml" tofile="${checkstyle.reports.dir}/checkstyle_report.xml" />
    </checkstyle>
    <xslt  in="${checkstyle.reports.dir}/checkstyle_report.xml"
           out="${checkstyle.reports.dir}/checkstyle_report.html"
           style="${checkstyle.xsl}" />
  </target> 


  <target name="test" description="Run tests" depends="unitTest"/>
  <target name="unitTest" depends="test.console.launcher"/>

  <property name="testreports.dir" location="${reports.dir}/testresults"/>

  <!-- https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher -->
  <target name="test.console.launcher" depends="compile">
    <mkdir dir="${testreports.dir}"/>
    <java classpathref="test.classpath"
          classname="org.junit.platform.console.ConsoleLauncher"
          fork="true"
          failonerror="false">
      <arg value="--scan-classpath"/>
      <arg line="--reports-dir ${testreports.dir}"/>
    </java>
    <junitreport todir="${testreports.dir}">
      <fileset dir="${testreports.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${testreports.dir}"/>
    </junitreport>
  </target>

</project>
